@{
    Layout = null;
}

<script id="2d-vertex-shader" type="x-shader/x-vertex">
  attribute vec2 a_position;
  attribute vec2 a_texCoord;

  uniform vec2 u_resolution;

  varying vec2 v_texCoord;

  void main() {
  // convert the rectangle from pixels to 0.0 to 1.0
    vec2 zeroToOne = a_position / u_resolution;

    // convert from 0->1 to 0->2
    vec2 zeroToTwo = zeroToOne * 2.0;

    // convert from 0->2 to -1->+1 (clipspace)
    vec2 clipSpace = zeroToTwo - 1.0;

    gl_Position = vec4(clipSpace * vec2(1, -1), 0, 1);

    // pass the texCoord to the fragment shader
    // The GPU will interpolate this value between points.
    v_texCoord = a_texCoord;
  }
</script>
<!-- fragment shader -->
<script id="2d-fragment-shader" type="x-shader/x-fragment">
  precision mediump float;

  uniform vec2 lightPositions[10];
  uniform vec4 lightColors[10];
  uniform float exponentFactor;
  uniform float constantFactor;
  uniform float linearFactor;

  varying vec2 v_texCoord;

  void main() {

    for(int i = 0; i < 10; i++) {

      vec2 light = lightPositions[i];
      vec4 color = lightColors[i];

      if(light.x > 0.0) {

        float dist = distance(v_texCoord, light);

        float attenuation = constantFactor +
        linearFactor * dist +
        exponentFactor * dist * dist;

        float factor = 0.5 / attenuation;

        gl_FragColor += color * vec4(factor, factor, factor, 1);

      } else {
        break;
      }
    }
  }


</script>
